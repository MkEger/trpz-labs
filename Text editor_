1\Models\MySqlConnection.cs
using System;
using System.Collections.Generic;
using System.Windows.Forms;
using MySql.Data.MySqlClient;
using TextEditorMK.Models;

namespace TextEditorMK.Data
{
    public class MySqlDatabaseHelper
    {
        private readonly string _connectionString;

        public MySqlDatabaseHelper()
        {
            _connectionString = "Server=localhost;Database=texteditor_db;Uid=root;Pwd=root;Port=3306;";
            InitializeDatabase();
        }

        private void InitializeDatabase()
        {
            try
            {
                using (var connection = new MySqlConnection(_connectionString))
                {
                    connection.Open();

                    // Спочатку видаляємо проблемні таблиці якщо вони існують
                    DropTablesIfExist(connection);
                    
                    // Створення таблиць з правильною структурою
                    CreateTables(connection);

                    // Початкові дані
                    SeedData(connection);
                    
                    MessageBox.Show("Database initialized successfully!", "MySQL", 
                        MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show($"Database error: {ex.Message}", "MySQL Error", 
                    MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void DropTablesIfExist(MySqlConnection connection)
        {
            try
            {
                // Видаляємо таблиці у правильному порядку (спочатку залежні)
                string[] dropQueries = {
                    "DROP TABLE IF EXISTS Documents",
                    "DROP TABLE IF EXISTS RecentFiles", 
                    "DROP TABLE IF EXISTS EditorSettings",
                    "DROP TABLE IF EXISTS TextEncodings"
                };

                foreach (string query in dropQueries)
                {
                    using (var command = new MySqlCommand(query, connection))
                    {
                        command.ExecuteNonQuery();
                    }
                }
            }
            catch { }
        }

        private void CreateTables(MySqlConnection connection)
        {
            string[] createTableQueries = {
                @"CREATE TABLE TextEncodings (
                    Id INT AUTO_INCREMENT PRIMARY KEY,
                    Name VARCHAR(50) NOT NULL DEFAULT 'UTF-8',
                    CodePage VARCHAR(20) NOT NULL DEFAULT 'utf-8',
                    IsDefault BOOLEAN NOT NULL DEFAULT FALSE
                )",

                @"CREATE TABLE Documents (
                    Id INT AUTO_INCREMENT PRIMARY KEY,
                    FileName VARCHAR(255) NOT NULL DEFAULT '',
                    FilePath VARCHAR(500) NOT NULL DEFAULT '',
                    Content LONGTEXT,
                    EncodingId INT NOT NULL DEFAULT 1,
                    CreatedAt DATETIME NOT NULL DEFAULT NOW(),
                    ModifiedAt DATETIME NOT NULL DEFAULT NOW(),
                    IsSaved BOOLEAN NOT NULL DEFAULT FALSE,
                    INDEX idx_filepath (FilePath),
                    INDEX idx_modified (ModifiedAt)
                )",

                @"CREATE TABLE RecentFiles (
                    Id INT AUTO_INCREMENT PRIMARY KEY,
                    FilePath VARCHAR(500) NOT NULL DEFAULT '',
                    FileName VARCHAR(255) NOT NULL DEFAULT '',
                    LastOpenedAt DATETIME NOT NULL DEFAULT NOW(),
                    OpenCount INT NOT NULL DEFAULT 0,
                    INDEX idx_last_opened (LastOpenedAt)
                )",

                @"CREATE TABLE EditorSettings (
                    Id INT AUTO_INCREMENT PRIMARY KEY,
                    FontFamily VARCHAR(50) NOT NULL DEFAULT 'Consolas',
                    FontSize INT NOT NULL DEFAULT 12,
                    Theme VARCHAR(20) NOT NULL DEFAULT 'Light',
                    WordWrap BOOLEAN NOT NULL DEFAULT FALSE,
                    ShowLineNumbers BOOLEAN NOT NULL DEFAULT TRUE
                )"
            };

            foreach (string query in createTableQueries)
            {
                using (var command = new MySqlCommand(query, connection))
                {
                    command.ExecuteNonQuery();
                }
            }
        }

        private void SeedData(MySqlConnection connection)
        {
            // Додати базові кодування
            string insertEncodings = @"
                INSERT INTO TextEncodings (Name, CodePage, IsDefault) VALUES 
                ('UTF-8', 'utf-8', TRUE),
                ('UTF-16 LE', 'utf-16', FALSE),
                ('Windows-1251', 'windows-1251', FALSE)";
            
            using (var insertCommand = new MySqlCommand(insertEncodings, connection))
            {
                insertCommand.ExecuteNonQuery();
            }

            // Додати базові налаштування
            string insertSettings = @"
                INSERT INTO EditorSettings (FontFamily, FontSize, Theme, WordWrap, ShowLineNumbers) 
                VALUES ('Consolas', 12, 'Light', FALSE, TRUE)";
            
            using (var insertCommand = new MySqlCommand(insertSettings, connection))
            {
                insertCommand.ExecuteNonQuery();
            }

            // Додати тестові нещодавні файли
            string insertRecentFiles = @"
                INSERT INTO RecentFiles (FilePath, FileName, LastOpenedAt, OpenCount) VALUES 
                ('C:/Documents/test1.txt', 'test1.txt', NOW() - INTERVAL 1 DAY, 5),
                ('C:/Documents/readme.txt', 'readme.txt', NOW() - INTERVAL 2 DAY, 3),
                ('C:/Projects/notes.txt', 'notes.txt', NOW() - INTERVAL 1 HOUR, 8),
                ('C:/Temp/draft.txt', 'draft.txt', NOW() - INTERVAL 3 HOUR, 2)";
            
            using (var insertCommand = new MySqlCommand(insertRecentFiles, connection))
            {
                insertCommand.ExecuteNonQuery();
            }
        }

        public MySqlConnection GetConnection()
        {
            return new MySqlConnection(_connectionString);
        }

        public bool TestConnection()
        {
            try
            {
                using (var connection = new MySqlConnection(_connectionString))
                {
                    connection.Open();
                    return true;
                }
            }
            catch
            {
                return false;
            }
        }
    }
}